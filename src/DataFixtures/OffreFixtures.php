<?php

namespace App\DataFixtures;

use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use App\Entity\Condition;
use App\Entity\Offre;
use App\Entity\OffreCee;
use App\Entity\Valeur;

class OffreFixtures extends Fixture implements DependentFixtureInterface
{
    public function load(ObjectManager $manager)
    {
        foreach (OuvrageFixtures::OUVRAGES as $ouvrage) {
            switch ($ouvrage['CODE']) {
                case 'ENV_01':
                    // Offre Ma Prime Rénov
                    $offre = (new Offre())
                        ->setNom('Isolation des murs par l\'extérieur')
                        ->addCondition((new Condition())->setDescription('R ≥ 3,7 m².K/W'))
                        ->addVariable($this->getReference('SURFACE_ISOLANT'))
                        ->addVariable($this->getReference('QUOTE_PART'))
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('100 * object.getSurfaceIsolant() * object.getQuotePart()')
                            ->addCondition((new Condition())
                                ->setDescription('Montant pour les ménages aux ressources très modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'TRES_MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('75 * object.getSurfaceIsolant() * object.getQuotePart()')
                            ->addCondition((new Condition())
                                ->setDescription('Montant pour les ménages aux ressources modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('plafond')
                            ->setValeur("min(object.getCoutTTC() - object.getMontantAides(), 150 * object.getSurfaceIsolant()) * 0.9")
                            ->addCondition((new Condition())
                                ->setDescription('Plafond pour les ménages aux ressources très modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'TRES_MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('plafond')
                            ->setValeur("min(object.getCoutTTC() - object.getMontantAides(), 150 * object.getSurfaceIsolant()) * 0.75")
                            ->addCondition((new Condition())
                                ->setDescription('Plafond pour les ménages aux ressources modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'MODESTE'")
                            )
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('MA_PRIME_RENOV'));

                    $manager->persist($offre);

                    // Offre CEE
                    $offre = (new OffreCee())
                        ->setFiche('BAR-EN-102')
                        ->setUrl('https://atee.fr/system/files/2020-01/bar-en-102_0.pdf')
                        ->setNom('Isolation des murs')
                        ->addVariable($this->getReference('SURFACE_ISOLANT'))
                        ->addCondition((new Condition())->setDescription('R ≥ 3,7 m².K/W'))
                        ->addCondition((new Condition())
                            ->setDescription('Les travaux sont réalisés par une entreprise RGE')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('Le logement est achevé depuis au moins 2 ans')
                            ->setExpression('object.getAgeLogement() >= 2')
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('2400')
                            ->addCondition((new Condition())
                                ->setDescription('Montant en kWh cumac par m² d\'isolant')
                                ->setExpression("object.getCodeZoneClimatique() === 'H1' && object.getCodeEnergieChauffage() === 'ELEC'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('3800')
                            ->addCondition((new Condition())
                                ->setDescription('Montant en kWh cumac par m² d\'isolant')
                                ->setExpression("object.getCodeZoneClimatique() === 'H1' && object.getCodeEnergieChauffage() !== 'ELEC'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('2000')
                            ->addCondition((new Condition())
                                ->setDescription('Montant en kWh cumac par m² d\'isolant')
                                ->setExpression("object.getCodeZoneClimatique() === 'H2' && object.getCodeEnergieChauffage() === 'ELEC'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('3100')
                            ->addCondition((new Condition())
                                ->setDescription('Montant en kWh cumac par m² d\'isolant')
                                ->setExpression("object.getCodeZoneClimatique() === 'H2' && object.getCodeEnergieChauffage() !== 'ELEC'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('1300')
                            ->addCondition((new Condition())
                                ->setDescription('Montant en kWh cumac par m² d\'isolant')
                                ->setExpression("object.getCodeZoneClimatique() === 'H3' && object.getCodeEnergieChauffage() === 'ELEC'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('2100')
                            ->addCondition((new Condition())
                                ->setDescription('Montant en kWh cumac par m² d\'isolant')
                                ->setExpression("object.getCodeZoneClimatique() === 'H3' && object.getCodeEnergieChauffage() !== 'ELEC'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('facteur')
                            ->setValeur('object.getSurfaceIsolant()')
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('CEE_PRIME_ENERGIE'));

                    $manager->persist($offre);

                    // Offre Eptz
                    $offre = (new Offre())
                        ->setNom('Isolation des murs donnant sur l\'extérieur')
                        ->addVariable($this->getReference('COUT_TTC'))
                        ->addCondition((new Condition())->setDescription('R ≥ 3,7 m².K/W'))
                        ->addCondition((new Condition())
                            ->setDescription('Les travaux couvrent au moins la moitié de la surface des murs donnant sur l\'extérieur')
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('object.getCoutTTC()')
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('ECO_PTZ'));

                    $manager->persist($offre);

                    // Offre Habiter Mieux Sérénité
                    $offre = (new Offre())
                        ->setNom('Isolation des murs')
                        ->addVariable($this->getReference('COUT_TTC'))
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('object.getCoutTTC()')
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('ANAH_HABITER_MIEUX'));

                    $manager->persist($offre);

                    break;
                
                case 'TH_01':
                    // Offre Ma Prime Rénov individuel
                    $offre = (new Offre())
                        ->setNom('Chaudières à très haute performance énergétique')
                        ->addCondition((new Condition())
                            ->setDescription('L\'efficacité énergétique saisonnière pour le chauffage est supérieure ou égale à 92%'))
                        ->addCondition((new Condition())
                            ->setDescription('Montant pour les bâtiments individuels')
                            ->setExpression("object.getCodeTypeLogement() === 'MAISON' || object.getCodeTypeLogement() === 'APPARTEMENT'")
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('1200')
                            ->addCondition((new Condition())
                                ->setDescription('Montant pour les ménages aux ressources très modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'TRES_MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('800')
                            ->addCondition((new Condition())
                                ->setDescription('Montant pour les ménages aux ressources modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('plafond')
                            ->setValeur("min(object.getCoutTTC() - object.getMontantAides(), 4000) * 0.9")
                            ->addCondition((new Condition())
                                ->setDescription('Plafond pour les ménages aux ressources très modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'TRES_MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('plafond')
                            ->setValeur("min(object.getCoutTTC() - object.getMontantAides(), 4000) * 0.75")
                            ->addCondition((new Condition())
                                ->setDescription('Plafond pour les ménages aux ressources modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'MODESTE'")
                            )
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('MA_PRIME_RENOV'));

                    $manager->persist($offre);

                    // Offre Ma Prime Rénov collectif
                    $offre = (new Offre())
                        ->setNom('Chaudières à très haute performance énergétique')
                        ->addCondition((new Condition())
                            ->setDescription('L\'efficacité utile pour le chauffage est supérieure ou égale à 87%, mesurée à 100% de la puissance thermique nominale')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('L\'efficacité utile pour le chauffage est supérieure ou égale à 95,5%, mesurée à 30% de la puissance thermique nominale')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('Montant pour les bâtiments collectifs')
                            ->setExpression("object.getCodeTypeLogement() === 'BAT_COLLECTIF'")
                        )
                        ->addVariable($this->getReference('NOMBRE_LOGEMENTS'))
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('400 * object.getNombreLogements()')
                            ->addCondition((new Condition())
                                ->setDescription('Montant pour les ménages aux ressources très modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'TRES_MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('300 * object.getNombreLogements()')
                            ->addCondition((new Condition())
                                ->setDescription('Montant pour les ménages aux ressources modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('plafond')
                            ->setValeur("min(object.getCoutTTC() - object.getMontantAides(), 4000 * object.getNombreLogements()) * 0.9")
                            ->addCondition((new Condition())
                                ->setDescription('Plafond pour les ménages aux ressources très modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'TRES_MODESTE'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('plafond')
                            ->setValeur("min(object.getCoutTTC() - object.getMontantAides(), 4000 * object.getNombreLogements()) * 0.75")
                            ->addCondition((new Condition())
                                ->setDescription('Plafond pour les ménages aux ressources modestes')
                                ->setExpression("object.getCodeCategorieRessource() === 'MODESTE'")
                            )
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('MA_PRIME_RENOV'));

                    $manager->persist($offre);

                    // Offre CEE
                    $offre = (new OffreCee())
                        ->setFiche('BAR-TH-106')
                        ->setUrl('https://atee.fr/system/files/2020-01/bar-th-106_mod_a23-2_apres_01-02-2017_1_0.pdf')
                        ->setNom('Chaudière individuelle à haute performance énergétique')
                        ->addCondition((new Condition())
                            ->setDescription('La puissance thermique nominale de la chaudière est inférieure ou égale à 70 kW')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('L\'efficacité énergétique saisonnière de la chaudière est supérieure ou égale à 90%')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('Les travaux sont réalisés par une entreprise RGE')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('Le logement est achevé depuis au moins 2 ans')
                            ->setExpression('object.getAgeLogement() >= 2')
                        )
                        ->addCondition((new Condition())
                            ->setDescription('Le logement est une maison ou un appartement')
                            ->setExpression("object.getCodeTypeLogement() === 'MAISON' || object.getCodeTypeLogement() === 'APPARTEMENT'")
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('46900')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Montant unitaire en kWh cumac')
                                ->setExpression("object.getCodeZoneClimatique() === 'H1'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('39600')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Montant unitaire en kWh cumac')
                                ->setExpression("object.getCodeZoneClimatique() === 'H2'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('28500')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Montant unitaire en kWh cumac')
                                ->setExpression("object.getCodeZoneClimatique() === 'H3'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('facteur')
                            ->setValeur('0.5')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Facteur correctif selon la surface habitable')
                                ->setExpression("object.getSurfaceHabitable() < 70")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('facteur')
                            ->setValeur('0.7')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Facteur correctif selon la surface habitable')
                                ->setExpression("object.getSurfaceHabitable() >= 70 && object.getSurfaceHabitable() < 90")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('facteur')
                            ->setValeur('1')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Facteur correctif selon la surface habitable')
                                ->setExpression("object.getSurfaceHabitable() >= 90 && object.getSurfaceHabitable() < 110")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('facteur')
                            ->setValeur('1.1')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Facteur correctif selon la surface habitable')
                                ->setExpression("object.getSurfaceHabitable() >= 110 && object.getSurfaceHabitable() < 130")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('facteur')
                            ->setValeur('1.6')
                            ->addCondition((new Condition())
                                ->setDescription('Pour une maison individuelle')
                                ->setExpression("object.getCodeTypeLogement() === 'MAISON'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Facteur correctif selon la surface habitable')
                                ->setExpression("object.getSurfaceHabitable() > 130")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('24800')
                            ->addCondition((new Condition())
                                ->setDescription('Pour un appartement')
                                ->setExpression("object.getCodeTypeLogement() === 'APPARTEMENT'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Montant unitaire en kWh cumac')
                                ->setExpression("object.getCodeZoneClimatique() === 'H1'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('21200')
                            ->addCondition((new Condition())
                                ->setDescription('Pour un appartement')
                                ->setExpression("object.getCodeTypeLogement() === 'APPARTEMENT'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Montant unitaire en kWh cumac')
                                ->setExpression("object.getCodeZoneClimatique() === 'H2'")
                            )
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('15800')
                            ->addCondition((new Condition())
                                ->setDescription('Pour un appartement')
                                ->setExpression("object.getCodeTypeLogement() === 'APPARTEMENT'")
                            )
                            ->addCondition((new Condition())
                                ->setDescription('Montant unitaire en kWh cumac')
                                ->setExpression("object.getCodeZoneClimatique() === 'H3'")
                            )
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('CEE_PRIME_ENERGIE'));

                    $manager->persist($offre);

                    // Offre Eptz
                    $offre = (new Offre())
                        ->setNom('Isolation des murs donnant sur l\'extérieur')
                        ->addVariable($this->getReference('COUT_TTC'))
                        ->addCondition((new Condition())->setDescription('R ≥ 3,7 m².K/W'))
                        ->addCondition((new Condition())
                            ->setDescription('Les travaux couvrent au moins la moitié de la surface des murs donnant sur l\'extérieur')
                        )
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('object.getCoutTTC()')
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('ECO_PTZ'));

                    $manager->persist($offre);

                    // Offre Habiter Mieux Sérénité
                    $offre = (new Offre())
                        ->setNom('Isolation des murs')
                        ->addVariable($this->getReference('COUT_TTC'))
                        ->addValeur((new Valeur())
                            ->setType('montant')
                            ->setValeur('object.getCoutTTC()')
                        )
                        ->setOuvrage($this->getReference($ouvrage['CODE']))
                        ->setAide($this->getReference('ANAH_HABITER_MIEUX'));
                        
                    $manager->persist($offre);

                    break;
            }
            $manager->flush();
        }
    }

    public function getDependencies()
    {
        return [ AideFixtures::class, OuvrageFixtures::class, VariableFixtures::class ];
    }
}
